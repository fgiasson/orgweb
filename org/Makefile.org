#+PROPERTY: header-args :results silent :comments link :mkdirp yes :eval no :tangle ../Makefile

#+TITLE: Makefile

The Make file is used to encapsulate a few commands that are useful while
developing =orgweb=

* Phony

#+begin_src makefile
.PHONY: install-build build install-local-build uninstall-local-build rebuild-local create-ven source-venv clean
#+end_src

* install-build

=make install-build= is used to install Python =build= which is used to build
Python packages.

This command is used to install =build= in the current environment (the computer
or virtual environment). Once it is done, it shouldn't be required until the
virtual environment is deleted and recreated.

#+begin_src makefile
install-build:
	pip install --upgrade build
#+end_src

* create-env

=make create-env= is used to create a new Python environment where the
development of =orgweb= will occur.

#+begin_src makefile
create-venv:
	python3 -m venv .venv
#+end_src

* build

=make build= is used to build the =orgweb= package once the virtual environment
is created and sourced.

#+begin_src makefile
build:
	python3 -m build
#+end_src

* install-local-build

=make install-local-build= is used after running =make build= to install
=orgweb= in the current environment.

#+begin_src makefile
install-local-build:
	pip install .
#+end_src

* uninstall-local-build
=make uninstall-local-build= is used to uninstall =orgweb= from the current
environment.

#+begin_src makefile
uninstall-local-build:
	pip uninstall -y orgweb
#+end_src

* rebuild-local

=make rebuild-local= is used to =uninstall-local-build= and
=install-local-build= all at once.

#+begin_src makefile
rebuild-local:
	pip uninstall -y orgweb
	python3 -m build
	pip install .
#+end_src

* Clean

=make clean= is used to clean the repository out of all automatically generated
artifacts.

#+begin_src makefile
clean:
	rm -rf build
	rm -rf dist
	rm -rf orgweb.egg-info
	rm -rf org/orgweb/__pycache__
	rm -rf orgweb
	rm -rf .mypy_cache
	rm Makefile
	rm pyproject.toml
#+end_src

* Create PyPi Readme file

Since PyPi doesn't support Org readme, we have to export it in Markdown to have
it available on the PyPi package page.

#+begin_src makefile
export-pypi-readme:
	emacs --batch --eval "(progn (find-file \"README.org\") (org-md-export-to-markdown))"
	mv README.md pypi-readme.md
#+end_src
